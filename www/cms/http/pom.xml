<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>cms</artifactId>
		<groupId>net.nawia.www</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>net.nawia.www.cms</groupId>
	<artifactId>http</artifactId>
	<packaging>war</packaging>
	<name>http</name>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<repositories>
		<!-- Several key Java EE APIs and RIs are missing from the Maven Central 
			Repository -->
		<!-- The goal is to eventually eliminate the reliance on the JBoss repository -->
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</repository>
	</repositories>

	<dependencies>

		<!-- Common to JEE and Servlet containers -->


		<!-- JSF 2.0 API -->

		<!-- Optional, but pretty useful. -->
		<!-- <dependency> <groupId>javax.servlet</groupId> <artifactId>jstl</artifactId> 
			</dependency> -->
		
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.14.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Jetty/Tomcat-specific scopes and artifacts -->

		<!-- JSF 2.0 -->


		<!-- end Jetty/Tomcat-specific scopes and artifacts -->

		<!-- Bean Validation API (JSR 303) -->

		<!-- Bean Validation Implementation -->
		<!-- Provides portable constraints such as @NotEmpty, @Email and @Url -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet</artifactId>
			<version>1.1.0.Beta1</version>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.0-SP2</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0.2-FCS</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.0.2-FCS</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.1.2-b04</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.owasp.esapi</groupId>
			<artifactId>esapi</artifactId>
			<version>2.0_rc10</version>
			<type>jar</type>
		</dependency>
	</dependencies>

	<build>
		<finalName>http</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.0.0.M2</version>
				<configuration>
					<!-- force friendly name instead of artifact name + version -->
					<contextPath>${project.build.finalName}</contextPath>
					<!-- Where the BeanManager is constructed. This is where you'll declare 
						datasources. -->
					<jettyEnvXml>${basedir}/src/test/resources/jetty-env.xml</jettyEnvXml>
					<!-- This parameter will auto-deploy modified classes. -->
					<!-- You can save changes in a file or class and refresh your browser 
						to view the changes. -->
					<scanIntervalSeconds>3</scanIntervalSeconds>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="voices">
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element ref="voice" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="speed" type="xs:short"/>
			<xs:attribute name="interval" type="xs:short"/>
			<xs:attribute name="chance" type="xs:short" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="voice">
		<xs:complexType>
			<xs:attribute name="yell" type="xs:boolean"/>
			<xs:attribute name="sentence" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="targetchange">
		<xs:complexType>
			<xs:attribute name="speed" type="xs:short"/>
			<xs:attribute name="interval">
				<!-- use="required" -->
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="chance" type="xs:byte" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="summons">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="summon" maxOccurs="unbounded"/>
				<xs:element ref="attribute" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="maxSummons" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:maxInclusive value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="summon">
		<xs:complexType>
			<xs:attribute name="speed">
				<xs:annotation>
					<xs:documentation>Deprecated, use interval instead. If both used,
						only last one is stored.
					</xs:documentation>
				</xs:annotation>
				<!-- FIXME: $interval ^ $speed -->
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="max" type="xs:integer"/>
			<xs:attribute name="interval">
				<!-- use="required" -->
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="chance" type="xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="strategy">
		<xs:annotation>
			<xs:documentation>Deprecated.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="attack" type="xs:integer">
				<xs:annotation>
					<xs:documentation>Deprecated.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="defense" type="xs:integer">
				<xs:annotation>
					<xs:documentation>Deprecated.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="script">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="monster">
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element ref="health"/>
				<xs:choice>
					<xs:sequence>
						<xs:element ref="strategy"/>
						<xs:element ref="targetchange"/>
						<xs:element ref="look"/>
						<xs:element ref="flags"/>
						<xs:element ref="attacks"/>
						<xs:element ref="defenses"/>
						<xs:element ref="elements"/>
						<xs:element ref="immunities"/>
						<xs:sequence minOccurs="0">
							<xs:element ref="summons" minOccurs="0"/>
							<xs:element ref="voices"/>
							<xs:element ref="loot"/>
						</xs:sequence>
					</xs:sequence>
					<xs:sequence>
						<xs:element ref="look"/>
						<xs:choice>
							<xs:sequence>
								<xs:element ref="targetchange"/>
								<xs:choice>
									<xs:sequence>
										<xs:element ref="strategy"/>
										<xs:element ref="flags"/>
										<xs:choice>
											<xs:sequence>
												<xs:element ref="script"/>
												<xs:element ref="attacks"/>
												<xs:element ref="defenses"/>
												<xs:element ref="elements"/>
												<xs:element ref="immunities"/>
												<xs:element ref="summons"/>
												<xs:element ref="voices"/>
											</xs:sequence>
											<xs:sequence>
												<xs:element ref="defenses"/>
												<xs:choice minOccurs="0">
													<xs:sequence>
														<xs:sequence minOccurs="0">
															<xs:element ref="elements"/>
															<xs:element ref="voices"/>
														</xs:sequence>
														<xs:element ref="loot"/>
													</xs:sequence>
													<xs:sequence>
														<xs:element ref="immunities"/>
														<xs:element ref="voices"/>
													</xs:sequence>
													<xs:sequence>
														<xs:element ref="voices"/>
														<xs:element ref="loot" minOccurs="0"/>
													</xs:sequence>
												</xs:choice>
											</xs:sequence>
											<xs:sequence>
												<xs:element ref="attacks"/>
												<xs:choice>
													<xs:sequence>
														<xs:element ref="elements"/>
														<xs:choice>
															<xs:sequence>
																<xs:sequence minOccurs="0">
																	<xs:element ref="immunities"/>
																	<xs:element ref="voices"/>
																</xs:sequence>
																<xs:element ref="loot"/>
															</xs:sequence>
															<xs:sequence>
																<xs:element ref="voices"/>
																<xs:element ref="defenses"/>
															</xs:sequence>
														</xs:choice>
													</xs:sequence>
													<xs:sequence>
														<xs:element ref="defenses"/>
														<xs:choice>
															<xs:element ref="loot"/>
															<xs:sequence>
																<xs:element ref="voices"/>
																<xs:sequence minOccurs="0">
																	<xs:element ref="elements"/>
																	<xs:element ref="immunities"/>
																</xs:sequence>
																<xs:element ref="loot"/>
															</xs:sequence>
															<xs:sequence>
																<xs:element ref="summons"/>
																<xs:sequence minOccurs="0">
																	<xs:element ref="elements"/>
																	<xs:element ref="immunities"/>
																</xs:sequence>
																<xs:element ref="voices"/>
																<xs:element ref="loot"/>
															</xs:sequence>
															<xs:sequence>
																<xs:element ref="immunities"/>
																<xs:choice minOccurs="0">
																	<xs:element ref="loot"/>
																	<xs:sequence>
																		<xs:element ref="voices"/>
																		<xs:sequence minOccurs="0">
																			<xs:choice minOccurs="0">
																				<xs:element ref="summons"/>
																				<xs:sequence>
																					<xs:element ref="elements"/>
																					<xs:element ref="immunities"/>
																				</xs:sequence>
																			</xs:choice>
																			<xs:element ref="loot"/>
																		</xs:sequence>
																	</xs:sequence>
																	<xs:sequence>
																		<xs:element ref="summons"/>
																		<xs:sequence minOccurs="0">
																			<xs:element ref="voices" minOccurs="0"/>
																			<xs:element ref="loot"/>
																		</xs:sequence>
																	</xs:sequence>
																	<xs:sequence>
																		<xs:element ref="elements"/>
																		<xs:choice minOccurs="0">
																			<xs:element ref="loot"/>
																			<xs:sequence>
																				<xs:element ref="voices"/>
																				<xs:element ref="loot" minOccurs="0"/>
																			</xs:sequence>
																			<xs:sequence>
																				<xs:element ref="summons"/>
																				<xs:element ref="voices" minOccurs="0"/>
																				<xs:element ref="loot"/>
																			</xs:sequence>
																		</xs:choice>
																	</xs:sequence>
																</xs:choice>
															</xs:sequence>
															<xs:sequence>
																<xs:element ref="elements"/>
																<xs:choice minOccurs="0">
																	<xs:sequence>
																		<xs:sequence minOccurs="0">
																			<xs:element ref="summons"/>
																			<xs:element ref="voices"/>
																		</xs:sequence>
																		<xs:element ref="loot"/>
																	</xs:sequence>
																	<xs:sequence>
																		<xs:element ref="voices"/>
																		<xs:element ref="loot" minOccurs="0"/>
																	</xs:sequence>
																	<xs:sequence>
																		<xs:element ref="immunities"/>
																		<xs:choice minOccurs="0">
																			<xs:element ref="loot"/>
																			<xs:sequence>
																				<xs:element ref="voices"/>
																				<xs:sequence minOccurs="0">
																					<xs:element ref="summons" minOccurs="0"/>
																					<xs:element ref="loot"/>
																				</xs:sequence>
																			</xs:sequence>
																			<xs:sequence>
																				<xs:element ref="summons"/>
																				<xs:choice minOccurs="0">
																					<xs:element ref="loot"/>
																					<xs:sequence>
																						<xs:element ref="voices"/>
																						<xs:element ref="loot" minOccurs="0"/>
																					</xs:sequence>
																				</xs:choice>
																			</xs:sequence>
																		</xs:choice>
																	</xs:sequence>
																</xs:choice>
															</xs:sequence>
														</xs:choice>
													</xs:sequence>
												</xs:choice>
											</xs:sequence>
										</xs:choice>
									</xs:sequence>
									<xs:sequence>
										<xs:element ref="flags"/>
										<xs:element ref="attacks"/>
										<xs:element ref="defenses"/>
										<xs:element ref="elements"/>
										<xs:element ref="voices"/>
										<xs:element ref="loot"/>
									</xs:sequence>
								</xs:choice>
							</xs:sequence>
							<xs:sequence>
								<xs:element ref="strategy"/>
								<xs:element ref="flags"/>
								<xs:element ref="attacks"/>
								<xs:choice>
									<xs:sequence>
										<xs:element ref="elements"/>
										<xs:element ref="defenses"/>
									</xs:sequence>
									<xs:sequence>
										<xs:element ref="defenses"/>
										<xs:element ref="elements"/>
										<xs:choice minOccurs="0">
											<xs:element ref="voices"/>
											<xs:sequence>
												<xs:element ref="immunities"/>
												<xs:element ref="summons" minOccurs="0"/>
												<xs:element ref="voices"/>
											</xs:sequence>
										</xs:choice>
									</xs:sequence>
								</xs:choice>
							</xs:sequence>
						</xs:choice>
					</xs:sequence>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="speed" type="xs:integer" use="required"/>
			<xs:attribute name="race" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="blood"/>
						<xs:enumeration value="energy"/>
						<xs:enumeration value="fire"/>
						<xs:enumeration value="undead"/>
						<xs:enumeration value="venom"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="namedescription" type="xs:string"/>
			<xs:attribute name="nameDescription" type="xs:string"/>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="manacost" type="xs:nonNegativeInteger"/>
			<xs:attribute name="experience" type="xs:integer" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="loot">
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element ref="item" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="look">
		<xs:complexType>
			<xs:attribute name="type" type="xs:integer">
				<xs:annotation>
					<xs:documentation>If type is used, You need to fill head, body,
						legs, feet and addons. You cannot use typeex (use type OR
						typeex,
						not both).
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="head" type="xs:unsignedInt"/>
			<xs:attribute name="body" type="xs:unsignedInt"/>
			<xs:attribute name="legs" type="xs:unsignedInt"/>
			<xs:attribute name="feet" type="xs:unsignedInt"/>
			<xs:attribute name="addons" type="xs:unsignedInt"/>
			<xs:attribute name="typeex" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>If typeex used, you cannot use type.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="corpse" type="xs:unsignedShort"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="item">
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element ref="inside" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:integer">
				<xs:annotation>
					<xs:documentation>Item ID</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="countmax">
				<xs:simpleType>
					<xs:restriction base="xs:unsignedInt">
						<xs:minExclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="chancemax">
				<xs:simpleType>
					<xs:restriction base="xs:byte">
						<xs:enumeration value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="chance" type="xs:unsignedInt"/>
			<xs:attribute name="chance1" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>deprecated, use chance instead</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="inside">
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element ref="item" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="immunity">
		<xs:complexType>
			<xs:attribute name="poison" type="xs:boolean"/>
			<xs:attribute name="physical" type="xs:boolean"/>
			<xs:attribute name="paralyze" type="xs:boolean"/>
			<xs:attribute name="outfit" type="xs:boolean"/>
			<xs:attribute name="manadrain" type="xs:boolean"/>
			<xs:attribute name="lifedrain" type="xs:boolean"/>
			<xs:attribute name="invisible" type="xs:boolean"/>
			<xs:attribute name="invisibility" type="xs:boolean"/>
			<xs:attribute name="ice" type="xs:boolean"/>
			<xs:attribute name="holy" type="xs:boolean"/>
			<xs:attribute name="fire" type="xs:boolean"/>
			<xs:attribute name="energy" type="xs:boolean"/>
			<xs:attribute name="earth" type="xs:boolean"/>
			<xs:attribute name="drunk" type="xs:boolean"/>
			<xs:attribute name="drown" type="xs:boolean"/>
			<xs:attribute name="death" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="immunities">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="immunity" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="health">
		<xs:complexType>
			<xs:attribute name="now" type="xs:unsignedInt" use="required"/>
			<xs:attribute name="max" type="xs:unsignedInt" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="flags">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="flag" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="flag">
		<xs:complexType>
			<xs:attribute name="targetdistance" type="xs:positiveInteger"/>
			<xs:attribute name="summonable" type="xs:boolean"/>
			<xs:attribute name="staticattack">
				<xs:simpleType>
					<xs:restriction base="xs:nonNegativeInteger">
						<xs:maxInclusive value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="runonhealth" type="xs:unsignedInt"/>
			<xs:attribute name="pushable" type="xs:boolean"/>
			<xs:attribute name="lightlevel" type="xs:integer"/>
			<xs:attribute name="lightcolor" type="xs:integer"/>
			<xs:attribute name="illusionable" type="xs:boolean"/>
			<xs:attribute name="hostile" type="xs:boolean"/>
			<xs:attribute name="hidehealth" type="xs:boolean"/>
			<xs:attribute name="convinceable" type="xs:boolean"/>
			<xs:attribute name="canpushitems" type="xs:boolean"/>
			<xs:attribute name="canpushcreatures" type="xs:boolean"/>
			<xs:attribute name="attackable" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="event">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="elements">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="element" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="element">
		<xs:complexType>
			<xs:attribute name="physicalPercent" type="xs:integer"/>
			<xs:attribute name="icePercent" type="xs:integer"/>
			<xs:attribute name="earthPercent" type="xs:integer"/>
			<xs:attribute name="firePercent" type="xs:integer"/>
			<xs:attribute name="energyPercent" type="xs:integer"/>
			<xs:attribute name="holyPercent" type="xs:integer"/>
			<xs:attribute name="deathPercent" type="xs:integer"/>
			<xs:attribute name="drownPercent" type="xs:integer"/>
			<xs:attribute name="lifeDrainPercent" type="xs:integer"/>
			<xs:attribute name="manaDrainPercent" type="xs:integer"/>
			<xs:attribute name="healingPercent" type="xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="defenses">
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element ref="defense" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="defense" type="xs:integer"/>
			<xs:attribute name="armor" type="xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="defense">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="attribute" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="speedchange">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:minInclusive value="-1000"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="name" use="required">
				<xs:simpleType>
					<xs:union memberTypes="xs:string xs:string">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="melee">
									<xs:annotation>
										<xs:documentation>If 'melee' is used, You CAN use 'attack',
											'fire', 'poison', 'energy', 'drown', 'freeze', 'dazzle',
											'curse' and 'tick'.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="physical"/>
								<xs:enumeration value="poison"/>
								<xs:enumeration value="fire"/>
								<xs:enumeration value="energy"/>
								<xs:enumeration value="drown"/>
								<xs:enumeration value="ice"/>
								<xs:enumeration value="holy"/>
								<xs:enumeration value="death"/>
								<xs:enumeration value="lifedrain"/>
								<xs:enumeration value="manadrain"/>
								<xs:enumeration value="healing"/>
								<xs:enumeration value="speed">
									<xs:annotation>
										<xs:documentation>If 'speed is used, you CAN use
											'speedchange'.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="outfit">
									<xs:annotation>
										<xs:documentation>If 'outfit' is used, you CAN use 'monster'
											OR
											'item'
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="invisible"/>
								<xs:enumeration value="drunk"/>
								<xs:enumeration value="firefield"/>
								<xs:enumeration value="poisonfield"/>
								<xs:enumeration value="energyfield"/>
								<xs:enumeration value="firecondition"/>
								<xs:enumeration value="poisoncondition"/>
								<xs:enumeration value="energycondition"/>
								<xs:enumeration value="drowncondition"/>
								<!-- <xs:enumeration value="strength" /> -->
								<!-- <xs:enumeration value="effect" /> -->
							</xs:restriction>
						</xs:simpleType>
					</xs:union>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="monster" type="xs:string"/>
			<xs:attribute name="min" type="xs:unsignedInt"/>
			<xs:attribute name="max" type="xs:unsignedInt"/>
			<xs:attribute name="item" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>lookTypeEx ID</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="interval" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="duration"/>
			<xs:attribute name="chance">
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:maxInclusive value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="attribute">
		<xs:complexType>
			<xs:attribute name="value" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="spear"/>
						<xs:enumeration value="bolt"/>
						<xs:enumeration value="arrow"/>
						<xs:enumeration value="fire"/>
						<xs:enumeration value="energy"/>
						<xs:enumeration value="poisonarrow"/>
						<xs:enumeration value="burstarrow"/>
						<xs:enumeration value="throwingstar"/>
						<xs:enumeration value="throwingknife"/>
						<xs:enumeration value="smallstone"/>
						<xs:enumeration value="death"/>
						<xs:enumeration value="largerock"/>
						<xs:enumeration value="snowball"/>
						<xs:enumeration value="powerbolt"/>
						<xs:enumeration value="poison"/>
						<xs:enumeration value="infernalbolt"/>
						<xs:enumeration value="huntingspear"/>
						<xs:enumeration value="enchantedspear"/>
						<xs:enumeration value="redstar"/>
						<xs:enumeration value="greenstar"/>
						<xs:enumeration value="royalspear"/>
						<xs:enumeration value="sniperarrow"/>
						<xs:enumeration value="onyxarrow"/>
						<xs:enumeration value="piercingbolt"/>
						<xs:enumeration value="whirlwindsword"/>
						<xs:enumeration value="whirlwind"/>
						<xs:enumeration value="whirlwindclub"/>
						<xs:enumeration value="etherealspear"/>
						<xs:enumeration value="ice"/>
						<xs:enumeration value="earth"/>
						<xs:enumeration value="holy"/>
						<xs:enumeration value="suddendeath"/>
						<xs:enumeration value="flasharrow"/>
						<xs:enumeration value="flammingarrow"/>
						<xs:enumeration value="shiverarrow"/>
						<xs:enumeration value="energyball"/>
						<xs:enumeration value="smallice"/>
						<xs:enumeration value="smallholy"/>
						<xs:enumeration value="smallearth"/>
						<xs:enumeration value="eartharrow"/>
						<xs:enumeration value="explosion"/>
						<xs:enumeration value="cake"/>
						<xs:enumeration value="redspark"/>
						<xs:enumeration value="bluebubble"/>
						<xs:enumeration value="poff"/>
						<xs:enumeration value="yellowspark"/>
						<xs:enumeration value="explosionarea"/>
						<xs:enumeration value="explosion"/>
						<xs:enumeration value="firearea"/>
						<xs:enumeration value="yellowbubble"/>
						<xs:enumeration value="greenbubble"/>
						<xs:enumeration value="blackspark"/>
						<xs:enumeration value="teleport"/>
						<xs:enumeration value="energy"/>
						<xs:enumeration value="blueshimmer"/>
						<xs:enumeration value="redshimmer"/>
						<xs:enumeration value="greenshimmer"/>
						<xs:enumeration value="fire"/>
						<xs:enumeration value="greenspark"/>
						<xs:enumeration value="mortarea"/>
						<xs:enumeration value="greennote"/>
						<xs:enumeration value="rednote"/>
						<xs:enumeration value="poison"/>
						<xs:enumeration value="yellownote"/>
						<xs:enumeration value="purplenote"/>
						<xs:enumeration value="bluenote"/>
						<xs:enumeration value="whitenote"/>
						<xs:enumeration value="bubbles"/>
						<xs:enumeration value="dice"/>
						<xs:enumeration value="giftwraps"/>
						<xs:enumeration value="yellowfirework"/>
						<xs:enumeration value="redfirework"/>
						<xs:enumeration value="bluefirework"/>
						<xs:enumeration value="stun"/>
						<xs:enumeration value="sleep"/>
						<xs:enumeration value="watercreature"/>
						<xs:enumeration value="groundshaker"/>
						<xs:enumeration value="hearts"/>
						<xs:enumeration value="fireattack"/>
						<xs:enumeration value="energyarea"/>
						<xs:enumeration value="smallclouds"/>
						<xs:enumeration value="holydamage"/>
						<xs:enumeration value="bigclouds"/>
						<xs:enumeration value="icearea"/>
						<xs:enumeration value="icetornado"/>
						<xs:enumeration value="iceattack"/>
						<xs:enumeration value="stones"/>
						<xs:enumeration value="smallplants"/>
						<xs:enumeration value="carniphila"/>
						<xs:enumeration value="purpleenergy"/>
						<xs:enumeration value="yellowenergy"/>
						<xs:enumeration value="holyarea"/>
						<xs:enumeration value="bigplants"/>
						<xs:enumeration value="cake"/>
						<xs:enumeration value="giantice"/>
						<xs:enumeration value="watersplash"/>
						<xs:enumeration value="plantattack"/>
						<xs:enumeration value="tutorialarrow"/>
						<xs:enumeration value="tutorialsquare"/>
						<xs:enumeration value="mirrorhorizontal"/>
						<xs:enumeration value="mirrorvertical"/>
						<xs:enumeration value="skullhorizontal"/>
						<xs:enumeration value="skullvertical"/>
						<xs:enumeration value="assassin"/>
						<xs:enumeration value="stepshorizontal"/>
						<xs:enumeration value="bloodysteps"/>
						<xs:enumeration value="stepsvertical"/>
						<xs:enumeration value="yalaharighost"/>
						<xs:enumeration value="bats"/>
						<xs:enumeration value="smoke"/>
						<xs:enumeration value="insects"/>
						<xs:enumeration value="dragonhead"/>
						<xs:enumeration value="mortarea"/>
						<xs:enumeration value="arrow"/>
						<xs:enumeration value="bigclouds"/>
						<xs:enumeration value="bigplants"/>
						<xs:enumeration value="blackSpark"/>
						<xs:enumeration value="blackspark"/>
						<xs:enumeration value="bluebubble"/>
						<xs:enumeration value="bluenote"/>
						<xs:enumeration value="blueshimmer"/>
						<xs:enumeration value="bolt"/>
						<xs:enumeration value="bubbles"/>
						<xs:enumeration value="burstarrow"/>
						<xs:enumeration value="cake"/>
						<xs:enumeration value="carniphila"/>
						<xs:enumeration value="death"/>
						<xs:enumeration value="earth"/>
						<xs:enumeration value="energy"/>
						<xs:enumeration value="energyarea"/>
						<xs:enumeration value="energyball"/>
						<xs:enumeration value="explosion"/>
						<xs:enumeration value="explosionarea"/>
						<xs:enumeration value="fire"/>
						<xs:enumeration value="firearea"/>
						<xs:enumeration value="fireattack"/>
						<xs:enumeration value="greenbubble"/>
						<xs:enumeration value="greennote"/>
						<xs:enumeration value="greenshimmer"/>
						<xs:enumeration value="greenspark"/>
						<xs:enumeration value="groundshaker"/>
						<xs:enumeration value="hearts"/>
						<xs:enumeration value="holyarea"/>
						<xs:enumeration value="holydamage"/>
						<xs:enumeration value="ice"/>
						<xs:enumeration value="icearea"/>
						<xs:enumeration value="iceattack"/>
						<xs:enumeration value="icetornado"/>
						<xs:enumeration value="largerock"/>
						<xs:enumeration value="mortarea"/>
						<xs:enumeration value="piercingbolt"/>
						<xs:enumeration value="plantattack"/>
						<xs:enumeration value="poff"/>
						<xs:enumeration value="poison"/>
						<xs:enumeration value="poisonarrow"/>
						<xs:enumeration value="purpleenergy"/>
						<xs:enumeration value="purplenote"/>
						<xs:enumeration value="rednote"/>
						<xs:enumeration value="redshimmer"/>
						<xs:enumeration value="redspark"/>
						<xs:enumeration value="sleep"/>
						<xs:enumeration value="smallclouds"/>
						<xs:enumeration value="smallearth"/>
						<xs:enumeration value="smallholy"/>
						<xs:enumeration value="smallice"/>
						<xs:enumeration value="smallplants"/>
						<xs:enumeration value="smallstone"/>
						<xs:enumeration value="snowball"/>
						<xs:enumeration value="spear"/>
						<xs:enumeration value="stones"/>
						<xs:enumeration value="stun"/>
						<xs:enumeration value="suddendeath"/>
						<xs:enumeration value="teleport"/>
						<xs:enumeration value="throwingknife"/>
						<xs:enumeration value="throwingstar"/>
						<xs:enumeration value="watersplash"/>
						<xs:enumeration value="whirlwindaxe"/>
						<xs:enumeration value="whirlwindclub"/>
						<xs:enumeration value="whirlwindsword"/>
						<xs:enumeration value="whitenote"/>
						<xs:enumeration value="yellowbubble"/>
						<xs:enumeration value="yellowenergy"/>
						<xs:enumeration value="yellownote"/>
						<xs:enumeration value="yellowspark"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="key" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="areaeffect"/>
						<xs:enumeration value="shooteffect"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="attacks">
		<!-- ref spell & union -->
		<xs:complexType mixed="true">
			<xs:sequence minOccurs="0">
				<xs:element ref="attack" maxOccurs="unbounded"/>
				<xs:element ref="defense" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="attack">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0">
				<xs:sequence>
					<xs:element ref="attribute" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:choice>
			<xs:attribute name="monster" type="xs:string"/>
			<xs:attribute name="target" type="xs:boolean"/>
			<xs:attribute name="start" type="xs:integer"/>
			<xs:attribute name="spread" type="xs:nonNegativeInteger"/>
			<xs:attribute name="speedchange">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:minInclusive value="-1000"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="speed" type="xs:integer"/>
			<xs:attribute name="skill" type="xs:integer">
				<xs:annotation>
					<xs:documentation>Skill ID</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="shielding" type="xs:integer"/>
			<xs:attribute name="range" type="xs:nonNegativeInteger"/>
			<xs:attribute name="radius" type="xs:integer"/>
			<xs:attribute name="fire" type="xs:integer"/>
			<xs:attribute name="poison" type="xs:integer"/>
			<xs:attribute name="energy" type="xs:integer"/>
			<xs:attribute name="drown" type="xs:integer"/>
			<xs:attribute name="freeze" type="xs:integer"/>
			<xs:attribute name="dazzle" type="xs:integer"/>
			<xs:attribute name="curse" type="xs:integer"/>
			<xs:attribute name="name" use="required">
				<xs:simpleType>
					<xs:union memberTypes="xs:string xs:string xs:string">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="melee">
									<xs:annotation>
										<xs:documentation>If 'melee' is used, You CAN use 'attack',
															'fire', 'poison', 'energy', 'drown', 'freeze', 'dazzle',
															'curse' and 'tick'.
														</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="physical"/>
								<xs:enumeration value="poison"/>
								<xs:enumeration value="fire"/>
								<xs:enumeration value="energy"/>
								<xs:enumeration value="drown"/>
								<xs:enumeration value="ice"/>
								<xs:enumeration value="holy"/>
								<xs:enumeration value="death"/>
								<xs:enumeration value="lifedrain"/>
								<xs:enumeration value="manadrain"/>
								<xs:enumeration value="healing"/>
								<xs:enumeration value="speed">
									<xs:annotation>
										<xs:documentation>If 'speed is used, you CAN use
															'speedchange'.</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="outfit">
									<xs:annotation>
										<xs:documentation>If 'outfit' is used, you CAN use 'monster'
															OR 'item'</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="invisible"/>
								<xs:enumeration value="drunk"/>
								<xs:enumeration value="firefield"/>
								<xs:enumeration value="poisonfield"/>
								<xs:enumeration value="energyfield"/>
								<xs:enumeration value="firecondition"/>
								<xs:enumeration value="poisoncondition"/>
								<xs:enumeration value="energycondition"/>
								<xs:enumeration value="drowncondition"/>
								<!-- <enumeration value="strength" /> -->
								<!-- <enumeration value="effect" /> -->
							</xs:restriction>
						</xs:simpleType>
					</xs:union>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="min" type="xs:integer"/>
			<xs:attribute name="max" type="xs:integer"/>
			<xs:attribute name="length" type="xs:integer"/>
			<xs:attribute name="item" type="xs:integer">
				<xs:annotation>
					<xs:documentation>lookTypeEx ID</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="interval" type="xs:positiveInteger" use="required"/>
			<xs:attribute name="fist" type="xs:integer"/>
			<xs:attribute name="duration" type="xs:integer"/>
			<xs:attribute name="distance" type="xs:integer"/> <!-- TODO: remove -> distance skill -->
			<xs:attribute name="club" type="xs:integer">
				<xs:annotation>
					<xs:documentation>skill modifier</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="change" type="xs:integer"/> <!-- TODO: remove(lifedrain spell) -->
			<xs:attribute name="count" type="xs:integer"/> <!-- TODO: (lifedrain spell) -->
			<xs:attribute name="chance">
				<xs:annotation>
					<xs:documentation>
						Issuing chance.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:maxInclusive value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="axe" type="xs:integer">
				<xs:annotation>
					<xs:documentation>skill modifier</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="attack" type="xs:integer">
				<xs:annotation>
					<xs:documentation>Attack strength. If 'attack' is used, you CAN use
						'skill'.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>
